import torch
import numpy as np
import networkx as nx
import matplotlib.pyplot as plt


flow_graph_1 = torch.load("PreprocessingData/graph_adware/adware1.pt")

def visualize_graph_3d(flow_graph):
    edge_index = flow_graph.edge_index
    unique_nodes = np.unique(edge_index.flatten())
    node_list = unique_nodes.tolist()
    print(node_list)
    G = nx.DiGraph()
    G.add_nodes_from(node_list)
    G.add_edges_from(edge_index.T)
    print(G.edges)
    
    fig = plt.figure(figsize=(20, 16))
    ax = fig.add_subplot(111, projection="3d")


    pos = nx.spring_layout(G, dim=3)
    for node in G.nodes():
        x, y, z = pos[node]
        ax.scatter(x, y, z, color="lightblue", s=15)  

    for edge in G.edges():
        start, end = edge
        x = [pos[start][0], pos[end][0]]
        y = [pos[start][1], pos[end][1]]
        z = [pos[start][2], pos[end][2]]
        ax.plot(x, y, z, color="black")

    plt.show()


visualize_graph_3d(flow_graph_1)
